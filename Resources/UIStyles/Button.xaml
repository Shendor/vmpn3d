<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />
        <ResourceDictionary Source="Reflections.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="OtherButtonStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Border" CornerRadius="1" BorderThickness="1" Background="{StaticResource ButtonBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
<!--                        <Trigger Property="IsDefaulted" Value="true">-->
<!--                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />-->
<!--                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="ButtonBase">
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="1" SnapsToDevicePixels="True">
                        <ContentPresenter Margin="7" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="50" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard HandoffBehavior="Compose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        
<!--                        <Trigger Property="IsDefaulted" Value="true">-->
<!--                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />-->
<!--                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightBrush}" /> 
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                       

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CornerButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="90" CenterX="9" CenterY="7.6" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="1">
                        <Border x:Name="Background" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="1">
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" Margin="2"
											HorizontalAlignment="Center"
											Content="{TemplateBinding Content}"
											ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Background" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="1" BorderThickness="1" Background="{StaticResource ButtonBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="reflectedButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition SharedSizeGroup="Row"></RowDefinition>
                            <RowDefinition SharedSizeGroup="Row"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border x:Name="Border" Grid.Row="0" CornerRadius="1" BorderThickness="1" 
                                Background="{StaticResource HighlightBrush}" BorderBrush="{StaticResource HighlightBorderBrush}">
                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                        
                        <Rectangle Grid.Row="1" RenderTransformOrigin="1,0.5" Style="{StaticResource buttonsReflection}">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{Binding ElementName=Border}"></VisualBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="200" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="160" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard HandoffBehavior="Compose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedHighlightBrush}" />
                            
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedHighlightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="smallReflectedButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="160" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition SharedSizeGroup="Row"></RowDefinition>
                            <RowDefinition SharedSizeGroup="Row"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border Name="Border" Grid.Row="0" CornerRadius="10" BorderThickness="1"
                                Background="{StaticResource LightBrush}" BorderBrush="{StaticResource BorderBrush}" >
                        </Border>

                        <Rectangle Grid.Row="1" RenderTransformOrigin="1,0.5" Style="{StaticResource buttonsReflection}">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{Binding ElementName=Border}"></VisualBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="100" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="180" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard HandoffBehavior="Compose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedHighlightBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FunctionalReflectedButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition SharedSizeGroup="Row"></RowDefinition>
                            <RowDefinition Height="15"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border x:Name="Border" Grid.Row="0" CornerRadius="1" BorderThickness="1" 
                                Background="{StaticResource ButtonBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}">
                            <ContentPresenter Margin="2" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True"/>
                        </Border>

                        <Rectangle Grid.Row="1" RenderTransformOrigin="1,0.5" Margin="0,0.4,0,0" Style="{StaticResource buttonsReflection}">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{Binding ElementName=Border}"></VisualBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="65" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard HandoffBehavior="Compose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedHighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>